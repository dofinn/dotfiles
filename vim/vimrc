set nocompatible hidden laststatus=2
call plug#begin()
Plug 'junegunn/fzf', { 'do': './install --bin' }
Plug 'junegunn/fzf.vim'
" GO IDE
Plug 'govim/govim'
" git integration
Plug 'tpope/vim-fugitive'
" status/tabline
Plug 'vim-airline/vim-airline'
" dark theme
Plug 'tomasiser/vim-code-dark'
" Git
Plug 'airblade/vim-gitgutter'
" Fuzzy finder
Plug 'junegunn/fzf.vim'
" Auto brackets
Plug 'jiangmiao/auto-pairs'
" Suround
Plug 'tpope/vim-surround'
call plug#end()

"GENERAL
let mapleader = ","
colorscheme codedark
set tabstop=4
set nu rnu " relative line numbers
let g:airline_powerline_fonts = 1
set autowrite
hi Folded guibg=#5fd7ff

" RipGrep
nnoremap <silent> <Leader>rg :Rg! <C-R><C-W><CR>

"MARKDOWN
autocmd BufRead,BufNewFile *.md setlocal spell
inoremap <expr> <c-x><c-k> fzf#vim#complete('cat /usr/share/dict/words')
nmap <leader>p :MarkdownPreview<CR>
set splitbelow
set splitright

"WINDOW NAVIGATION
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline#extensions#tabline#formatter = 'unique_tail'

"GLOBAL
" copy to system clipboard with crt-c
set clipboard=unnamedplus
xnoremap "+y y:call system("wl-copy", @")<cr>
map <C-c> "+y<CR>
"quicksave
nmap <leader>w :w<CR>
" quickquit
nmap <leader>q :q<CR>
" quickwritequit
nmap <leader>x :x<CR>
" next error
nmap <leader>ne :lnext<CR>
" previous error
nmap <leader>pe :lprevious<CR>
" Edit vimr configuration file
nnoremap <Leader>ev :e ~/.vimrc<CR>
" Reload vimr configuration file
nnoremap <Leader>rv :source ~/.vimrc<CR>
" split horizontal
nnoremap <Leader>sh :sp<CR>
" split vertial
nnoremap <Leader>sv :vsp<CR>
" quit all
nnoremap <Leader>qa :qa<CR>
" vert help
nnoremap <Leader>vh :vert help

"GITGUTTER
nmap ]h <Plug>(GitGutterNextHunk)
nmap [h <Plug>(GitGutterPrevHunk)

" quickfix navigation window
map <C-n> :cnext<CR>
map <C-m> :cprevious<CR>

"FZF-MAPPING
nnoremap <C-p> :Files<CR>
map <silent> <leader>b :Buffers<CR>
" This is the default extra key bindings
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit' }
nnoremap <Leader>qf :cclose<CR>:Quickfix<CR>

" Replace the default dictionary completion with fzf-based fuzzy completion
inoremap <expr> <c-x><c-k> fzf#vim#complete('cat /usr/share/dict/words')
nmap <leader>n :enew<CR>
nmap <leader>bq :bd<CR>
nmap <leader>bd :bd!<CR>
nmap <leader>. :bp<cr>
nmap <leader>/ :bn<cr>

" We also include a number of suggested settings that we think the majority of
" users will like/prefer.

set nocompatible
set nobackup
set nowritebackup
set noswapfile

filetype plugin on

set mouse=a

" To get hover working in the terminal we need to set ttymouse. See
"
" :help ttymouse
"
" for the appropriate setting for your terminal. Note that despite the
" automated tests using xterm as the terminal, a setting of ttymouse=xterm
" does not work correctly beyond a certain column number (citation needed)
" hence we use ttymouse=sgr
set ttymouse=sgr
nmap <silent> <buffer> <Leader>i : <C-u>call GOVIMHover()<CR>

" Suggestion: By default, govim populates the quickfix window with diagnostics
" reported by gopls after a period of inactivity, the time period being
" defined by updatetime (help updatetime). Here we suggest a short updatetime
" time in order that govim/Vim are more responsive/IDE-like
set updatetime=500

" Suggestion: To make govim/Vim more responsive/IDE-like, we suggest a short
" balloondelay
set balloondelay=250

" Suggestion: Turn on the sign column so you can see error marks on lines
" where there are quickfix errors. Some users who already show line number
" might prefer to instead have the signs shown in the number column; in which
" case set signcolumn=number
set signcolumn=number

" Suggestion: Turn on syntax highlighting for .go files. You might prefer to
" turn on syntax highlighting for all files, in which case
"
syntax on
"
" will suffice, no autocmd required.
autocmd! BufEnter,BufNewFile *.go syntax on
autocmd! BufLeave *.go syntax off

" Suggestion: turn on auto-indenting. If you want closing parentheses, braces
" etc to be added, https://github.com/jiangmiao/auto-pairs. In future we might
" include this by default in govim.
set autoindent
set smartindent
filetype indent on

" Suggestion: define sensible backspace behaviour. See :help backspace for
" more details
set backspace=2

" Suggestion: show info for completion candidates in a popup menu
if has("patch-8.1.1904")
  set completeopt+=popup
  set completepopup=align:menu,border:off,highlight:Pmenu
endif

" Stop Flicker in normal mode
set timeoutlen=1000 ttimeoutlen=0
 
" Set Gutter colors
"highlight SignColumn guibg=blue ctermbg=black
" Set background to black
"highlight Normal ctermbg=black
" split sign column and number 
set signcolumn=yes

" GOTO definitions
autocmd BufNewFile,BufRead *.go setlocal noexpandtab tabstop=4 shiftwidth=4
au FileType go nmap <Leader>dv :GOVIMGoToDef vsplit<cr>
au FileType go nmap <Leader>dh :GOVIMGoToDef split<cr>
au FileType go nmap <Leader>dn :GOVIMGoToDef<cr>
au FileType go nmap <Leader>gf :GOVIMReferences<cr>
au FileType go nmap <Leader>gi :GOVIMImplements<cr>
" Remap OmiCompletion
inoremap <C-n> <C-x><C-o>
